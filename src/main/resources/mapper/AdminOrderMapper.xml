<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.docmall.basic.admin.order.AdminOrderMapper">


<!-- 
테이블명 order_tbl
제약조건(인덱스) PK_ORD_CODE
컬럼명 ord_code, mbsp_id, ord_name, ord_addr_zipcode, ord_addr_basic, ord_addr_detail, ord_tel, ord_price, ord_desc, ord_regdate
시퀀스 seq_ord_code
 -->

	<sql id="criteria">
		<trim prefix= "(" suffix=") AND" prefixOverrides="OR" >
			<!-- 페이지에서 들어온 검색옵션과 검색내용은 각각 Criteria클래스의 type와 keyword로 들어간다. 여기 아래에서 해당 변수를 가져올땐 getter로 사용한다.
				 롬복으로 Criteria의 getter를 사용하고 있었는데 그것과 별개로 원하는 기능(typeArr)의 getter을 만들어주자.-->
			<!-- 중복검색기능이 없었으면 아래 foreach구문은 안들어 갔음. -->
			<!-- 상품명, 주문코드, 아이디 검색 등 -->
			<foreach collection="typeArr" item="type"> <!-- typeArr라고 쓰면 getTypeArr메서드로 인식된다. 값이 3번(N,C,I) 들어오므로 3번 작동된다. -->
				<trim prefix="OR">
					<choose>
						<when test="type == 'N'.toString()">
							ord_name like '%' || #{keyword} || '%'					
						</when>
						<when test="type == 'C'.toString()">
							ord_code like '%' || #{keyword} || '%'
						</when>
						<when test="type == 'I'.toString()">
							mbsp_id like '%' || #{keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- [주문목록 불러오기] -->
	<select id="order_list" resultType="OrderVo" parameterType="com.docmall.basic.common.dto.Criteria">
		SELECT  
			ord_code, mbsp_id, ord_name, ord_addr_zipcode, ord_addr_basic, ord_addr_detail, ord_tel, ord_price, ord_desc, ord_regdate
		FROM (
	    	SELECT /*+ INDEX_DESC(order_tbl PK_ORD_CODE) */
	        	ROWNUM AS RN, ord_code, mbsp_id, ord_name, ord_addr_zipcode, ord_addr_basic, ord_addr_detail, ord_tel, ord_price, ord_desc, ord_regdate
	    	FROM 
	        	order_tbl
	    	WHERE 
	    	<include refid="criteria"></include>
	    <![CDATA[
	    	ROWNUM <= (#{pageNum} * #{amount}) 
	    ]]>
	    	)
		WHERE 
			RN > (#{pageNum} - 1) * #{amount} 
			
	</select> 		<!-- #{pageNum} 쓸땐 변수명을 썼지만 get메서드가 작동되고 있다. -->

	<!-- ex05 mapper.xml에서 가져와서 여기 프로젝트에 맞게 수정 -->
	<!-- 공통사항: 검색조건 추가 -->
	<select id="getTotalCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			order_tbl
		WHERE
			<include refid="criteria"></include> <!-- 사용자가 검색을 사용하지 않으면 값이 넘어오지 않아 이 구문 자체가 생성되지 않는다. 그럼 where절까지만 작성디고 끊기는데 그럼 에러 발생함. -->
	    	ord_code > 0 	<!-- bno > 0을 쓰면 위 구문이 생성되지 않아도 에러가 발생하지 않는다. -->
	</select>

	<!-- [주문자(수령인) 정보] -->
	<select id="order_info" parameterType="Long" resultType="OrderVo">
		SELECT
			ord_code, mbsp_id, ord_name, ord_addr_zipcode, ord_addr_basic, ord_addr_detail, ord_tel, ord_price, ord_desc, ord_regdate
		FROM
			order_tbl
		WHERE
	    	ord_code = #{ord_code} 
	</select>

	<!-- [주문상품 정보] -->
	<select id="order_detail_info" parameterType="Long" resultType="OrderDetailInfoVo">
		SELECT 
			ot.ord_code, ot.pro_num, ot.dt_amount, ot.dt_price, p.pro_name, p.pro_up_folder, p.pro_img
		FROM
			 ordetail_tbl ot 
		INNER JOIN 
			product_tbl p
		ON 
			ot.pro_num = p.pro_num
		WHERE  
			ot.ord_code = #{ord_code}
	</select>
		
	<!-- [주문상품 개별삭제] -->
	<delete id="order_product_delete" parameterType="map">
		DELETE FROM
			ordetail_tbl
		WHERE
			ord_code = #{ord_code}
		AND
			pro_num = #{pro_num}
	</delete>

	<!-- [주문기본정보 수정] -->
	<update id="order_basic_modify" parameterType="OrderVo">
		UPDATE
			order_tbl
		SET	
			ord_name = #{ord_name}, 
			ord_addr_zipcode = #{ord_addr_zipcode}, 
			ord_addr_basic = #{ord_addr_basic}, 
			ord_addr_detail = #{ord_addr_detail}, 
			ord_tel = #{ord_tel}, 
			ord_desc = #{ord_desc}, 
			ord_admin_memo = #{ord_admin_memo}
		WHERE	
			ord_code = #{ord_code}
	</update>


</mapper>